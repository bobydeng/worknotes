#ifndef __SCREEN__
#define __SCREEN__

#include "config.h"
#include "Point.h"

//angle scan period
#define ASP 100

#define SCR_WIDTH 112.5
#define SCR_HALF_WIDTH (SCR_WIDTH/2)
#define LED_CNT 16
#define SCR_RUNIT 2.5

#define SCR_AUNIT PI/SCR_ANGLE_RES

//15 + SCR_RUNIT/2
#define SCR_R0 16.25 

#define pin0 2
#define pin9 11
//A0 to A5
#define pin10 14
#define pin15 19

int data[][SCR_ANGLE_RES] /*PROGMEM*/ = {
{40960,40960,40960,40960,40960,40960,40960,40960,40968,40968,
40968,32776,32776,36872,36864,36880,36880,36880,36880,36896,
38944,34912,34880,36800,34688,34688,34560,32768,32768,32768,
32768,33152,33216,33216,33728,33536,33536,34304,34304,34304,
1024,33792,1024,1024,33792,1024,33792,1024,1028,33796,
1030,33798,33796,33796,1028,33796,9732,42500,9740,9740,
42760,41880,46008,13296,46064,45552,12768,12480,38912,6144,
38912,38912,7168,3072,3072,35840,36352,3584,3584,3840,
3840,35584,39808,6528,6592,6336,6368,6240,6240,6368,
6624,6592,7040,7040,8064,7936,7936,7680,7168,3072,
7168,6144,6144,6144,14336,12288,12288,12288,28704,24608,
24688,24816,8416,8672,9152,896,896,1792,1792,3968,
3968,3968,3200,7296,7296,6340,6340,6350,6220,4188,
4216,4216,4152,48,48,48,96,96,96,96,
192,192,192,192,128,384,384,384,384,384,
0,0,0,0,0,0,0,256,896,1984,
1984,3168,3168,2080,2096,2064,2064,4096,4104,4104,
4104,4104,4104,4096,4096,4100,4100,4100,4100,4100,
4100,4100,4096,4096,4096,4104,4104,4104,4104,4104,
4096,6160,2064,2064,2080,3104,3168,1728,1984,896,
768,0,0,0,0,32768,0,0,32768,0,
0,0,0,0,0,0,0,512,512,768,
768,768,768,768,384,384,384,448,192,192,
192,224,224,1008,2032,36848,8184,8152,7900,7756,
40012,6208,36928,12352,45120,41024,41024,32864,32864,96,
32800,32800,32,32800,32816,32816,32816,8208,40960,45056,
47104,48640,48896,16320,49120,49120,49120,42976,42528,42528,
42528,42528,42528,42528,42528,42528,42528,41504,41504,41504,
41504,41504,41504,41520,41520,41472,41472,41472,41472,40960,
40960,40976,40976,41016,45176,45176,41192,41192,33224,33224,
33164,33668,33540,33540,34564,34308,34308,36356,35846,35846,
35844,35844,35844,35844,35852,33804,34316,34316,34328,34328,
33592,33584,33776,33776,33248,32992,32960,32768,32768,32768,
32768,32768,32768,32768,32768,32768,32768,32768,32768,32768,
33536,34688,34688,36800,36032,34912,34848,36896,36880,36880,
36880,36880,36864,36872,32776,40968,40968,40968,40968,40960}
,
{36352,36352,36352,34304,33792,32768,32768,32768,32768,32768,
32768,32832,32864,33008,33008,33016,33272,33272,33276,33276,
33276,33276,33276,33276,33276,33278,33278,33278,33278,33278,
33278,33278,33276,33276,33020,33020,33020,33020,32888,32888,
48,32768,0,0,32768,0,32768,0,0,32768,
0,32768,32768,32768,0,38912,6144,38912,7168,6144,
39936,39936,39936,7168,39936,39936,7168,7168,38912,6144,
38912,32768,0,32,96,32864,32880,112,112,112,
112,32864,32864,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,256,
896,896,960,1984,1984,1984,1984,1984,2016,2016,
2016,2016,2016,1984,1984,1984,1984,1984,960,960,
960,896,256,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,32,96,112,
112,240,240,240,240,240,240,240,96,96,
96,0,0,0,0,0,0,0,0,0,
0,0,128,480,480,496,496,1008,1008,1016,
1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,
1016,1016,1016,1016,1016,1008,1008,496,496,480,
480,64,0,0,4096,6144,6144,6144,6144,6144,
6144,6144,6144,6144,6144,38912,2048,0,32768,48,
48,120,120,120,120,120,120,120,120,120,
48,48,0,0,0,0,0,0,512,768,
1792,1792,1792,1792,1920,34688,1920,1792,1792,1792,
33536,768,32768,0,32768,32768,32768,32768,32768,0,
32768,32768,0,32768,32768,32768,32768,0,32768,32768,
32768,33152,33728,960,34784,34784,34800,34800,34800,36848,
36856,36856,36856,36856,36856,36856,36856,36856,36860,36860,
36860,36860,36856,36856,36860,36856,36856,36856,36856,36856,
36856,36856,36856,34800,34800,34800,34784,33760,33760,33728,
33152,32768,32768,32768,32768,32768,32768,32768,32768,32800,
32880,32880,33008,33016,33016,33016,33016,33016,33016,33016,
33008,33008,33008,34544,34400,34368,34304,34560,34560,34560,
34560,34560,34560,34304,34304,34316,33820,32798,32798,32830,
32830,32830,32830,32830,33854,34366,34366,36382,36382,36380,
36636,36608,36608,36608,36608,36608,36608,36608,36608,36352}
};

class Screen {
  public:
  Screen() {
    for (int Pin = pin0; Pin <=pin9; Pin++) {
      pinMode(Pin, OUTPUT);
    }
  
    for (int Pin = pin10; Pin <=pin15; Pin++) {
      pinMode(Pin, OUTPUT);
    }
  }
  
  void drawDot(Point &c, float dotR) {
    float x = c.x - SCR_HALF_WIDTH;
    float y = c.y - SCR_HALF_WIDTH;
    float r = sqrt(x*x + y*y);
    int rm = ceil((r - SCR_R0 - dotR)/SCR_RUNIT);
    int rM = (r - SCR_R0 + dotR)/SCR_RUNIT;
    float a = atan2(y, x);
    float aExtent = asin(dotR/r);
    int am = ceil((a - aExtent)/SCR_AUNIT);
    int aM = (a + aExtent)/SCR_AUNIT;
    for(int i=rm; i<=rM; i++) {
      if(i<0 || i> LED_CNT) {
        continue;
      }
      float r1=i*SCR_RUNIT + SCR_R0;
      for(int j=am; j<=aM; j++) {
        float dis_square = r*r + r1*r1 - 2*r*r1*cos(j*SCR_AUNIT - a);
        if(dis_square < dotR*dotR) {
          writeBuff[j] |= 1<<i;
        }
      }
    }
  }
  
  void flush() {
    int* temp = activeBuff;
    activeBuff = writeBuff;
    writeBuff = temp;
  }

  void draw(int* data) {
    memcpy(data, writeBuff, sizeof(int)*SCR_ANGLE_RES);
  }

  void startFrame() {
    asidx = 0;
  }

  void lineScan() {
    if(asidx < SCR_ANGLE_RES) {
      output(activeBuff[asidx]);
      asidx++;
    } else if(asidx == SCR_ANGLE_RES) {
      output(0);
    }
  }

  private:
  inline void output(int leds) {
    PORTD = leds << 2;  //0 ~ 5 -> D2 ~ D7
    PORTB = leds >> 6;  //6 ~ 9 -> B0 ~ B3
    if(leds & 0x100) { //workaround for LED8(PB2), don't know why it doesn't work in last line of code
      digitalWrite(10, HIGH);
    }else{
      digitalWrite(10, LOW);
    }
    PORTC = leds >> 9;  //10~15 -> CÔºê~ C5
    #ifndef USING_TIMER
      delayMicroseconds(ASP);
    #endif
  }
  
  int* activeBuff = data[0];
  int* writeBuff = data[1];
  int asidx = SCR_ANGLE_RES;
};

#endif
